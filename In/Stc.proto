syntax = "proto3";
option optimize_for = LITE_RUNTIME;

package RatkiniaProtocol;
import "Components/ComponentMessage.gen.proto";

message LoginResponse {
    enum LoginResult {
        Success = 0;
        Failure = 1;
        DuplicateContext = 2;
        DuplicateAccount = 3;
    };
    LoginResult result = 1;
}

message RegisterResponse {
    bool successful = 1;
    string failed_reason = 2;
}

message CreateCharacterResponse {
    enum CreateCharacterResult {
        Success = 0;
        InvalidNameLength = 1;
        DuplicateName = 2;
        UnknownError = 3;
    }
    CreateCharacterResult result = 1;
}

message SendMyCharacters {
    message Data {
        int32 id = 1;
        string name = 2;
    }
    repeated Data character_load_datas = 1;
}

message OpenWorld {}

message Notificate {
    enum Type {
        Info = 0;
        Warning = 1;
        Fatal = 2;
    }
    Type type = 1;
    string text = 2;
}

message SpawnEntity {
    enum Type {
        Normal = 0;
        MyCharacter = 1;
    }
    message Data {
        int32 entity_id = 1;
        Type type = 2;
    }

    repeated Data entity_spawn_datas = 1;
}

message AttachComponent {
    message Data {
        int32 target_entity = 1;
        int32 component_runtime_order = 2;
    }

    repeated Data component_attach_datas = 1;
}

message UpdateComponent {
    message Data {
        int32 target_entity = 1;
        ComponentVariant component_variant = 2;
    }

    repeated Data component_update_datas = 1;
}